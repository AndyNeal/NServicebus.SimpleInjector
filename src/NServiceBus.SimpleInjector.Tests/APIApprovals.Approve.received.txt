[assembly: System.CLSCompliantAttribute(true)]
[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute(@"NServiceBus.SimpleInjector.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100dde965e6172e019ac82c2639ffe494dd2e7dd16347c34762a05732b492e110f2e4e2e1b5ef2d85c848ccfb671ee20a47c8d1376276708dc30a90ff1121b647ba3b7259a6bc383b2034938ef0e275b58b920375ac605076178123693c6c4f1331661a62eba28c249386855637780e3ff5f23a6d854700eaa6803ef48907513b92")]
[assembly: System.Runtime.InteropServices.ComVisibleAttribute(false)]
[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5.2", FrameworkDisplayName=".NET Framework 4.5.2")]
namespace NServiceBus.ObjectBuilder.Autofac
{
    public class SimpleInjectorObjectBuilder : NServiceBus.ObjectBuilder.Common.IContainer, System.IDisposable
    {
        public SimpleInjectorObjectBuilder(SimpleInjector.Container parentContainer) { }
        public SimpleInjectorObjectBuilder() { }
        public object Build(System.Type typeToBuild) { }
        public System.Collections.Generic.IEnumerable<object> BuildAll(System.Type typeToBuild) { }
        public NServiceBus.ObjectBuilder.Common.IContainer BuildChildContainer() { }
        public void Configure(System.Type component, NServiceBus.DependencyLifecycle dependencyLifecycle) { }
        public void Configure<T>(System.Func<T> componentFactory, NServiceBus.DependencyLifecycle dependencyLifecycle) { }
        public void Dispose() { }
        public bool HasComponent(System.Type componentType) { }
        public void RegisterSingleton(System.Type lookupType, object instance) { }
        public void Release(object instance) { }
    }
}
namespace NServiceBus.SimpleInjector
{
    public class static CollectionRegistrationExtensions
    {
        public static void AllowToResolveArraysAndLists(this SimpleInjector.Container container) { }
    }
    public class static ImplicitPropertyInjectionExtensions
    {
        public static void AutoWirePropertiesImplicitly(this SimpleInjector.ContainerOptions options) { }
    }
}
namespace NServiceBus
{
    public class SimpleInjectorBuilder : NServiceBus.Container.ContainerDefinition
    {
        public SimpleInjectorBuilder() { }
        public override NServiceBus.ObjectBuilder.Common.IContainer CreateContainer(NServiceBus.Settings.ReadOnlySettings settings) { }
    }
}